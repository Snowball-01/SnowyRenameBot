from pyrogram import Client, filters
from pyrogram.types import *
from helper.database import db


async def feature_keyboard(user_id):
    metadata = await db.get_metadata(int(user_id))
    autorename = await db.get_autorename(int(user_id))
    media_type = await db.get_media_preference(int(user_id))
    
    keyboard = [[InlineKeyboardButton('·¥ç·¥á·¥õ·¥Ä·¥Ö·¥Ä·¥õ·¥Ä', callback_data='metadata_{}'.format('on' if metadata else 'off')),
                 InlineKeyboardButton('‚úÖ' if metadata else '‚ùå', callback_data='metadata_{}'.format('on' if metadata else 'off'))],
                
                [InlineKeyboardButton('·¥Ä·¥ú·¥õ·¥è- Ä·¥á…¥·¥Ä·¥ç·¥á', callback_data='autorename_{}'.format('on' if autorename else 'off')),
                 InlineKeyboardButton('‚úÖ' if autorename else '‚ùå', callback_data='autorename_{}'.format('on' if autorename else 'off'))]]
    
    
    if media_type == 'video':
        keyboard.append([InlineKeyboardButton('“ì…™ ü·¥á-·¥õ è·¥ò·¥á', callback_data='media_video'), InlineKeyboardButton('·¥†…™·¥Ö·¥á·¥è üé•', callback_data='media_video')])
    
    elif media_type == 'document':
        keyboard.append([InlineKeyboardButton('“ì…™ ü·¥á-·¥õ è·¥ò·¥á', callback_data='media_document'), InlineKeyboardButton('·¥Ö·¥è·¥Ñ·¥ú·¥ç·¥á…¥·¥õ üìÇ', callback_data='media_document')])
    
    elif media_type == 'audio':
        keyboard.append([InlineKeyboardButton('“ì…™ ü·¥á-·¥õ è·¥ò·¥á', callback_data='media_audio'), InlineKeyboardButton('·¥Ä·¥ú·¥Ö…™·¥è üéµ', callback_data='media_audio')])
        
    
    return InlineKeyboardMarkup(keyboard)

@Client.on_message(filters.private & filters.command("features"))
async def handle_features(client: Client, message: Message):
    user_id = message.from_user.id
    await message.reply_text(
        text="**  è·¥è·¥ú ·¥Ñ·¥Ä…¥ ·¥õ·¥è…¢…¢ ü·¥á ·¥õ ú·¥á ·¥ç·¥á·¥õ·¥Ä·¥Ö·¥Ä·¥õ·¥Ä & ·¥Ä·¥ú·¥õ·¥è- Ä·¥á…¥·¥Ä·¥ç·¥á **",
        reply_markup=await feature_keyboard(user_id)
    )
